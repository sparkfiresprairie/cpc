cmake_minimum_required(VERSION 3.6)
project(cpc)

set(CMAKE_CXX_STANDARD 14)

set(SOURCE_FILES main.cpp hash_table/contains_duplicate_2.cpp hash_table/HashTable.h hash_table/contains_duplicate.cpp hash_table/contains_duplicate_3.cpp dynamic_programming/DynamicProgramming.h dynamic_programming/maximal_square.cpp tree/Tree.h tree/count_complete_tree_nodes.cpp math/Math.h math/rectangle_area.cpp stack/Stack.h stack/basic_calculator.cpp design/Design.h design/implement_stack_using_queues.cpp tree/invert_binary_tree.cpp stack/basic_calculator_2.cpp array/Array.h array/summary_ranges.cpp array/majority_element_2.cpp tree/kth_smallest_element_in_a_bst.cpp math/power_of_two.cpp math/power_of_three.cpp math/power_of_four.cpp design/implement_queue_using_stacks.cpp linked_list/LinkedList.h linked_list/palindrome_linked_list.cpp tree/lowest_common_ancestor_of_a_binary_search_tree.cpp tree/lowest_common_ancestor_of_a_binary_tree.cpp array/product_of_array_except_self.cpp array/sliding_window_maximum.cpp binary_search/BinarySearch.h binary_search/search_a_2d_matrix_2.cpp divide_and_conquer/DivideAndConquer.h divide_and_conquer/different_ways_to_add_parentheses.cpp hash_table/valid_anagram.cpp array/shortest_word_distance.cpp hash_table/shortest_word_distance_2.cpp array/shortest_word_distance_3.cpp hash_table/strobogrammatic_number.cpp recursion/Recursion.h recursion/strobogrammatic_number_2.cpp recursion/strobogrammatic_number_3.cpp design/flatten_2d_vector.cpp sort/Sort.h sort/meeting_rooms.cpp sort/meeting_rooms_2.cpp backtracking/BackTracking.h backtracking/factor_combinations.cpp tree/verify_preorder_sequence_in_binary_search_tree.cpp dynamic_programming/paint_house.cpp tree/binary_tree_path.cpp math/add_digits.cpp array/3sum_smaller.cpp bit_manipulation/BitManipulation.h bit_manipulation/single_number_3.cpp union_find/UnionFind.h union_find/graph_valid_tree.cpp math/ugly_number.cpp math/ugly_number_2.cpp dynamic_programming/paint_house_2.cpp hash_table/palindrome_permutation.cpp backtracking/palindrome_permutation_2.cpp array/missing_number.cpp topological_sort/TopologicalSort.h topological_sort/alien_dictionary.cpp tree/closest_binary_search_tree_value.cpp string/String.h string/integer_to_english_words.cpp hash_table/h_index.cpp binary_search/h_index_2.cpp dynamic_programming/paint_fence.cpp array/find_the_celebrity.cpp binary_search/first_bad_version.cpp dynamic_programming/perfect_squares.cpp array/wiggle_sort.cpp design/zigzag_iterator.cpp array/move_zeroes.cpp divide_and_conquer/expression_add_operators.cpp design/peeking_iterator.cpp tree/inorder_successor_in_bst.cpp dfs_bfs/DFSBFS.h dfs_bfs/walls_and_gates.cpp array/find_the_duplicate_number.cpp hash_table/unique_word_abbreviation.cpp array/game_of_life.cpp hash_table/word_pattern.cpp hash_table/bulls_and_cows.cpp tree/serialize_and_deserialize_binary_tree.cpp backtracking/word_pattern_2.cpp brain_teaser/Brain_Teaser.h dynamic_programming/nim_game.cpp string/flip_game.cpp dynamic_programming/flip_game_2.cpp heap/Heap.h heap/find_median_from_data_stream.cpp math/best_meeting_point.cpp tree/binary_tree_longest_consecutive_sequence.cpp design/lru_cache.cpp hash_table/two_sum.cpp array/two_sum_2_input_array_is_sorted.cpp design/two_sum_3_data_structure_design.cpp dfs_bfs/number_of_islands.cpp design/lfu_cache.cpp stack/valid_parentheses.cpp linked_list/copy_list_with_random_pointer.cpp array/rotate_image.cpp hash_table/find_all_anagrams_in_a_string.cpp string/longest_palindromic_substring.cpp array/best_time_to_buy_and_sell_stock.cpp design/insert_delete_getrandom_o1.cpp dfs_bfs/letter_combinations_of_a_phone_number.cpp linked_list/reverse_linked_list.cpp hash_table/first_unique_character_in_a_string.cpp dfs_bfs/word_ladder.cpp array/trapping_rain_water.cpp design/min_stack.cpp hash_table/group_anagrams.cpp linked_list/intersection_of_two_linked_lists.cpp linked_list/linked_list_cycle.cpp linked_list/linked_list_cycle_2.cpp linked_list/add_two_numbers.cpp array/kth_largest_element_in_an_array.cpp dynamic_programming/edit_distance.cpp sort/insert_interval.cpp array/3sum.cpp array/majority_element.cpp design/flatten_nested_list_iterator.cpp tree/binary_tree_zigzag_level_order_traversal.cpp tree/binary_tree_maximum_path_sum.cpp topological_sort/course_schedule.cpp design/shuffle_an_array.cpp array/fizz_buzz.cpp string/reverse_words_in_a_string.cpp tree/binary_tree_right_side_view.cpp tree/distance_between_two_nodes_in_binary_tree.cpp design/range_sum_query_immutable.cpp design/range_sum_query_2d_immutable.cpp dynamic_programming/longest_increasing_subsequence.cpp dfs_bfs/remove_invalid_parentheses.cpp dfs_bfs/shortest_distance_from_all_buildings.cpp stack/remove_duplicate_letters.cpp math/sparse_matrix_multiplication.cpp tree/binary_tree_vertical_order_traversal.cpp binary_search/smallest_rectangle_enclosing_black_pixels.cpp union_find/number_of_islands_2.cpp binary_indexed_tree/BinaryIndexedTree.h array/best_time_to_buy_and_sell_stock_2.cpp dynamic_programming/best_time_to_buy_and_sell_stock_3.cpp dynamic_programming/best_time_to_buy_and_sell_stock_4.cpp dynamic_programming/best_time_to_buy_and_sell_stock_with_cooldown.cpp topological_sort/minimum_height_trees.cpp dynamic_programming/burst_balloons.cpp heap/super_ugly_number.cpp tree/binary_tree_upside_down.cpp string/read_n_characters_given_read4.cpp string/read_n_characters_given_read4_2_call_multiple_times.cpp hash_table/longest_substring_with_at_most_two_distinct_characters.cpp string/one_edit_distance.cpp array/missing_ranges.cpp string/reverse_words_in_a_string_2.cpp hash_table/group_shifted_strings.cpp tree/count_univalue_subtrees.cpp binary_indexed_tree/range_sum_query_2d_mutable.cpp backtracking/generalized_abbreviation.cpp union_find/number_of_connected_components_in_an_undirected_graph.cpp hash_table/maximum_size_subarray_sum_equals_k.cpp tree/largest_bst_subtree.cpp dfs_bfs/nested_list_weight_sum.cpp hash_table/longest_substring_with_at_most_k_distinct_characters.cpp design/moving_average_from_data_stream.cpp design/design_tic_tac_toe.cpp backtracking/andriod_unlock_patterns.cpp design/design_snake_game.cpp hash_table/line_reflection.cpp hash_table/rearrange_string_k_distance_apart.cpp design/logger_rate_limiter.cpp math/sort_transformed_array.cpp dynamic_programming/bomb_enemy.cpp design/design_hit_counter.cpp dfs_bfs/nested_list_weight_sum_2.cpp tree/find_leaves_of_binary_tree.cpp linked_list/plus_one_linked_list.cpp array/range_addition.cpp design/design_phone_directory.cpp array/max_consecutive_ones_2.cpp dynamic_programming/encode_string_with_shortest_length.cpp math/convex_polygon.cpp topological_sort/sequence_reconstruction.cpp stack/ternary_expression_parser.cpp trie/Trie.h trie/word_squares.cpp string/valid_word_square.cpp string/valid_word_abbreviation.cpp hash_table/intersection_of_two_arrays.cpp design/design_cd_function.cpp divide_and_conquer/count_of_smaller_numbers_after_self.cpp bit_manipulation/maximum_product_of_word_lengths.cpp math/bulb_switcher.cpp greedy/Greedy.h greedy/create_maximum_number.cpp dynamic_programming/coin_change.cpp array/wiggle_sort_2.cpp divide_and_conquer/count_of_range_sum.cpp linked_list/odd_even_linked_list.cpp dfs_bfs/longest_increasing_path_in_a_matrix.cpp greedy/patching_array.cpp tree/verify_preorder_serialization_of_a_binary_tree.cpp dfs_bfs/reconstruct_itinerary.cpp array/increasing_triplet_subsequence.cpp)
add_executable(cpc ${SOURCE_FILES})